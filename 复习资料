=========java基础：===================
输入流：：：：InputStream inputStream = Class.class.getResourceAsStream("/文件路径");
1.properties文件：
properties.getProperty("属性");

2.xml文件：  SAXReader------------dom4j
根元素：getRootElement()
子节点标签：elements（）
找到对应的子节点：attribute("标签名")
属性名：getName()
属性值：getStringValue()

3.excel文件：Workbook=============apache.poi


反射：
---1.-----------------------
//获得setXXX方法名字
String setMethod = "set" + (tagName.charAt(0) + "").toUpperCase() + tagName.substring(1);
//通过字节码对象获得setXXX方法
Method method = clazz.getMethod(setMethod, String.class);
//反射调用，user对象，调用这个method，设置了一个value的值
method.invoke(user, tagValue);

--2.通用：：需要传一个通用的字节码对象：Class clazz------ 
String methodName = "set" + fieldName;
// 获得方法对应的反射对象
Method setMethod = clazz.getMethod(methodName, String.class);
setMethod.invoke(object, cellValue);


=========HttlClient===============
//创建一个httpClient的子类对象
CloseableHttpClient httpClient = HttpClients.createDefault();
//创建一个post请求
HttpPost post = new HttpPost("http://test.lemonban.com/ningmengban/mvc/user/login.json");
//设置参数
post.setEntity(urlEncodedFormEntity);
//发包
CloseableHttpResponse response = httpClient.execute(post);
StatusLine statusLine = response.getStatusLine();//状态行
System.out.println(statusLine.getStatusCode());//状态码
Header[] allHeaders = response.getAllHeaders();//请求头
// 3.获取响应体
HttpEntity entity = response.getEntity();
// 工具包toString，将响应体转化为字符串
String string = EntityUtils.toString(entity);

------设置参数方法
BasicNameValuePair键值对
//1.json格式
/*JSONObject jsonParam = new JSONObject();
jsonParam.put("username", "admin");
jsonParam.put("password", "123456");
HttpEntity httpEntity = new StringEntity(jsonParam.toString(), ContentType.APPLICATION_JSON);
post.setEntity(httpEntity);*/
//2.form表单格式1
//HttpEntity httpEntity = new StringEntity("username=123&password=123", ContentType.APPLICATION_FORM_URLENCODED);
//3.form表单格式2
List<BasicNameValuePair> parameters = new ArrayList<BasicNameValuePair>();
parameters.add(new BasicNameValuePair("username", "123"));
parameters.add(new BasicNameValuePair("password", "123"));
UrlEncodedFormEntity urlEncodedFormEntity = new UrlEncodedFormEntity(parameters, "utf-8");
post.setEntity(urlEncodedFormEntity);
---4.通用：从Map---
Set<String> keySet = map.keySet();
for (String key : keySet) {
    String username = key;
    String password = map.get(key);
    BasicNameValuePair basicNameValuePair = new BasicNameValuePair(username, password);
    parameters.add(basicNameValuePair);
}



==============项目：=============
前程贷    13825161923 lemon123456


-------------jsonPath:------------------------
运算符	说明
$		根元素
@		当前元素
*		通配符，可以表示任何元素
..		递归搜索
.		子节点（元素）
['' (, '')]	一个或者多个子节点
[ (, )]	一个或者多个数组下标
[start:end]	数组片段，区间为[start,end)
[?()]	过滤器表达式，其中表达式结果必须是boolean类型，如可以是比较表达式或者逻辑表达式

//用jsonPath解析json
String jsonStr = "{\"code\":2,\"msg\":\"账号已存在\",\"data\":null,\"copyright\":\"dsnjkbsdkfksl\"}\n";
String jsonPath = "$.code";
Object parse = Configuration.defaultConfiguration().jsonProvider().parse(jsonStr);
Object read = JsonPath.read(parse, jsonPath);
//System.out.println(read);
//用fastJson的jsonPath解析json
JSONObject object = JSON.parseObject(jsonStr);
Object eval = JSONPath.eval(object, "$.msg");
Object read1 = JSONPath.read(jsonStr, "$.copyright");


[{"jsonStr":"$data.id","paramName":"member_id"},{"jsonStr":"$data.token","paramName":"token"}]


-----测试报告：-------------
testNg 
reportng
extendreport

-----allure----------
mvn -version //mvn -v    allure --version
1.进入工程项目：执行maven项目：mvn test
2.执行allure服务，并生成其报表 ：  allure serve allure-results   	//allure报表的路径


-----Jenkins：：-----------------
一般情况下，war的安装路径在/usr/share/jenkins目录下。
不过也有部分人不喜欢安装在这里，可以通过系统管理(System management)--> 系统信息(System Info)查找.war的文件

我们可以使用如下几个链接去下载：
https://updates.jenkins-ci.org/download/war/
http://mirror.xmission.com/jenkins/war-stable/
http://ftp.yz.yamagata-u.ac.jp/pub/misc/jenkins/war-stable/
https://mirrors.tuna.tsinghua.edu.cn/jenkins/ (这个是清华的镜像链接)

wget https://mirrors.tuna.tsinghua.edu.cn/jenkins/war/2.173/jenkins.war


---testNg----------------
   反射找对象：dataProviderClass = RegDataProvider.class , （类名.class）  
   数据提供者：dataProvider = "failCase"（方法名）




------Selenium------------
1.版本匹配
2.IE浏览器：设置忽略缩放、忽略安全域设置、指定一个初始化页面，保持窗口，防止window窗口丢失

3.元素定位：id、name、class、tag、linkText、partialLinkText
CSS定位:		cssSelector()
			ID:#kw
			class:  .s_ipt
			其他：[name='wd']
			组合：[name='wd'][autocomplete='off']
Xpath定位：：：：绝对定位：/div[1]/input[2]
				相对定位：//*[@id='kw']
						//input[@value='abcd']
						//span[@id='span']
						//input[@id='kw' and @class='aa']
				准确定位：//*[text()="消息"]  
				模糊定位：//*[contains(text(),'消')]	
						 //*[contains(@id,'kw')]
---截图-------
//强转为TakesScreenshot
TakesScreenshot  takesScreenshot = (TakesScreenshot) driver;
File srcFile = takesScreenshot.getScreenshotAs(OutputType.FILE);//截屏为一个文件对象，
File destFile = new File("D:\\testStudy\\tu.jpg");//创一个目标文件
FileUtils.copyFile(srcFile, destFile);

1.配置监听器，
2.继承TestListenerAdapter类，重写onTestFailure方法


---------等待-----------------
1.强制等待(必须等待，时间会浪费)
Thread.sleep(2000);
2.隐式等待（只要元素找到就向下操作，没找到：：超时之后报异常）：在规定时间内网页加载完成,则执行下一步，否则一直等到时间截止
//优点：灵活，不会浪费时间
//缺点：	1.driver生命周期内都有效用到隐式等待，会有资源消耗，不是所有的元素都需要等待；
//     	2.只能等待页面上存在的元素，（元素有但不可见，或者失效状态）
//      3.复杂的没法办到：等待元素已经可见、等待元素可被点击、等待iframe加载出来、等待窗口已经存在
driver.manage().timeouts().implicitlyWait(2, TimeUnit.SECONDS);  等待（隐式等待、延时等待）
3.智能等待：WebDriverWait 自定义等待：：等待元素已经可见、等待元素可被点击、等待iframe加载出来、等待窗口已经存在
//优点：每隔一段时间（默认0.5s）扫描一次页面，检查元素是否满足条件，满足返回true，不满足继续等待，直到找到满足或者超时
//缺点：不是全局设置，特点等待特殊处理
--WebDriverWait wait = new WebDriverWait(driver, 10);
WebElement webElement = wait.until(new ExpectedCondition<WebElement>() {
    public WebElement apply(WebDriver webDriver) {
        return driver.findElement(By.partialLinkText("一周排课"));
    }
});
---
WebElement webElement = wait.until(ExpectedConditions.elementToBeClickable(By.partialLinkText("一周排课")));
driver.findElement(By.partialLinkText("一周排课")).click();
---
ExpectedConditions.attributeContains(By.id("kw"),"value","hello")，id为kw 的元素，value的值包含hello
ExpectedConditions.numberOfElementsToBeLessThan(By.id("kw"), 5);数量少于5
---


---切换---
----1.alert框、confirm框----------
Alert alert = driver.switchTo().alert()
alert.getText()//获取文本
alert.accpet()//点击确认
alert.dismiss()//点击取消消失
		2.div框：不用切换，不过需要等待
		3.redio按钮：	findElements(),返回集合，get(0).click()  从0开始
		4.checkBox： 	findElements(),返回集合，get(0).click()  从0开始
----2.driver.switchTo().frame() ----- 传name、id、索引 ；；都无的话：用定位到（css、xpath）
		切回去(默认)：driver.switchTo().defaultContent();

----3.driver.switchTo().window()--窗口切换---
driver.getWindowHandle()：获取第一个页面的句柄      
Set<String> handles = driver.getWindowHandles();//获取所有页面的句柄(Set是有序的：LinkedHashSet)，但是没有索引找到第几个页面的句柄
ArrayList<String> handlesList = new ArrayList<String>(handles);//111111.可以包装转成ArrayList()
String secondHandle = handlesList.get(1);//得到第二个页面的句柄
driver.switchTo().window(secondHandle);//切换到第二个窗口
driver.switchTo().window(handlesList.get(0));//切换到第二个窗口


------下拉框--------
Select select = new Select(WebElement element);
Select select = new Select(driver.findElement(By.id("xxx")));
select.getOptions();//获取所有选项的方法
select.selectByIndex(index);//根据索引选中对应的元素
select.selectByValue(value);//根据value值选中对应的选项
select.selectByVisibleText(text);//根据文本值选中对应的选项
select.isMultiple();//判断是不是多选的选择框返回boolean值
select.deselectAll();//取消所有的选中
-------时间框：-------
ChromeDriver driver = new ChromeDriver();//如果用多态WebDriver   需要强转  JavascriptExecutor javascriptExecutor = (JavascriptExecutor) driver;
driver.get("https://www.12306.cn/index/");
String js = "document.getElementById('train_date').removeAttribute('readonly')";//移除属性
driver.executeScript(js);//执行js脚本移除属性
driver.findElement(By.id("train_date")).clear();
driver.findElement(By.id("train_date")).sendKeys("2020-04-28");

driver.executeScript(js) 同步：阻塞
driver.executeAsyncScript() 异步
-------------------
-------鼠标键盘事件：Actions-----Actions actions = new Actions();
								actions.sendKeys("你好")perform();
								actions.moveToElement(元素).click().perform();
--------------2.拖拽： 	需要长按：clickAndHold()-------释放：release()，-----执行表演：preform()
						元素1.clickAndHold().moveToElement(元素2).release().perform();
-------文件上传---input按钮，file类型----
   不点击，直接-----sendKeys(上传文件的路径)
----------------------------
 ------验证码---------------
 1.绕过cookie：addCookie
 2.万能验证码：000000    前程贷：hapi  测试后台：LM19
----------------------------

4.元素API：  get()  click()  quit()  close()   findElement()   findElements()返回List集合
getTagName()	：标签名
getAttribute()	：获取属性名
getText（）		：获取当前元素的文本内容
Keys类 			：键盘按键操作（复制粘贴等）	
submit()方法		：提交表单

isDisplayed（） 	：元素是否显示
isEnable（）		：元素是否有效，可以编辑，点击
isSelected（）	：是否被选中

getCurrentUrl() ：获取当前页面的url
getTitle()      ：获取当前页面的标题
getPageSource() ：获取当前页面源代码
getWindowHandle()：获取当前页面的句柄（唯一的）      
getWindowHandles()：获取所有页面的句柄（都不相同）
Options options = driver.mamage();
options.addCookie("key","value");//添加cookie信息，设置Cookie   可以作为绕过验证码 


driver.manage().window().maximize();   窗口最大化
Point point = window.getPosition(); 获取窗口位置
point.getX() X轴
point.getY() Y轴
Dimension dimension = window.getSize()  尺寸   dimension.getHeight() 高	 dimension.getWidth()：宽


---------Appium-----------------------
--------------------------------------
1.deviceName:  设备名(用adb devices找)
2.platformName:测试平台(Android/ios)
3.appPackage:  app安装包名(命令:aapt dump badging apk路径 |find "package")
4.appActivity: app启动入口(命令:aapt dump badging apk路径 |find "launchable-activity")
((((apk路径:D:\apk\lemonban_release_v2.1.2_finally.apk))))

URL url = new URL("http://localhost:4723/wd/hub");//通讯地址
driver = new AndroidDriver(url,desiredCapabilities);
| :过滤;;;;  > :代表重定向
--------关于adb连接手机(真机)步骤:-----------------

1.USB连接电脑
2.装一个手机助手:小米手机助手\豌豆荚\91手机助手(这样就可以不用装驱动了)
3.卸载手机助手(助手里有adb.与电脑上的adb冲突)

------adb常用命令----默认端口 5037--------
1.adb devices 电脑上的设备列表   
adb disconnect 取消连接 
2.adb pull [手机路径] [目标路径]   拉取
3.adb push [目标路径] [手机路径]   提交
4.adb shell  切换shell模式
5.adb install   安装
6.adb uninstall 卸载
7.adb kill-server  终止服务
8.adb start-server 开始服务
9.adb shell am start -n 包名/入口   ：启动app
10.adb shell pm clear 包名           清缓存
11.adb shell input tap x轴坐标 y轴坐标   点击
12.adb shell pm list packages 列出所有apk路径及包名

13.adb logcat 打印日志
adb logcat > 文件路径    打印日志到什么文件去（>重定向）

-----------app类型------------
1.native原生：性能最好，无法跨平台，维护高
2.web       ：可以跨平台
3.hybrid混合 ：性能比web好，维护成本地，可以跨平台，调试方便，消耗低


--------------定位方式：：：：-------------
1.driver.findElement(By.name("")) 失效
2.driver.findElementByAndroidUIAutomator("new UiSelector().text(\"abcd\")").click()
3.xpath
4.findElementByAccessibility() 对应 content-desc 属性
5，坐标  TouchAction对象  PointOption.point()
       touchAction.press().release().perform()
6.driver.findElementByAndroidUIAutomator("new UiSelector().description(\"abcd\")")
7.driver.findElementByAndroidUIAutomator("new UiSelector().rescourceId(\"abcd\")")

-----toast 元素-----
1.appium 1.6.3以上
2.设置测试引擎能力 uiautomator2
3.Android版本 5.0以上
4.方法： findElement(By.xpath("//*[contains(@text,'tips')]"))






-------------性能--------------
./jmeter -n -t jianshu.jmx -l a.jtl  （Linux）
-n 表示非图形化界面运行
-t 表示测试计划
-l 表示输出运行结果到文件
jmeter -n -t jianshu.jmx -l a.jtl  (Window)

-------------性能--------------·
-------分布式==================
主控机器：jmeter.properties文件
remote_hosts=192.168.120.122:8888
server.rmi.ssl.disable=true
mode=Standard   用于显示监听结果
助攻机器：jmeter.properties文件
server_port=1234
server.rmi.port=1234
server.rmi.ssl.disable=true   加密传输认证 为不可用
配置防火墙：关闭

启动命令：jmeter-server.bat -Djava.rmi.server.hostname=助攻机ip




3月25日 晚上 木森：python快速玩转数据库之pymysql模块！ 链接: https://pan.baidu.com/s/1rBYobWZHmgjm7PKtnVEeEA 提取码: z4ta
3月25日下午 罗杰：2020年最新sql面试题实战（一） 链接: https://pan.baidu.com/s/1OyiMyOpY5eXBNIfUgU5Z6g 提取码: nwq9
链接：https://pan.baidu.com/s/1R-Ma6KZiKJefQvw7hihHyw  提取码：2muc  
https://pan.baidu.com/s/1nPkpQWvBQKtPyxKYrf95dw 提取码: 9iib
链接: https://pan.baidu.com/s/1xPFGPZzNlRSyOpuPSljCyA 提取码: tt5t
链接: https://pan.baidu.com/s/1OfYmYZ--eZ5-3nO51CHz2g 提取码: a3pm
链接: https://pan.baidu.com/s/1DX4yqkISjbd2qxe3neOPpA 提取码: xsz5
链接: https://pan.baidu.com/s/1WnXXUsx-tm6C0tYuhxnReA 提取码: ak7r
抱歉 不记得是哪位大佬找我要SQL 方面的公开课了，我发微信群里，自己来拿哦

链接：https://pan.baidu.com/s/1gPRglpUTVBJrhb_W3bmdqQ 
提取码：ddps 

